# -*- coding: utf-8 -*-
"""
Created on Sun May 15 11:44:18 2022

@author: sanyo  ASS6
"""
#SIMPLE NAIVE BAYES CLASSIFICATION
import pandas as pd
df=pd.read_csv("Iris.csv")
df.head()
df.describe()
#%%
df.isnull().sum()
#%%
df.columns
#%%
#outerlier
import seaborn as sns
sns.boxplot(df['SepalLengthCm'])
#%%
sns.boxplot(df['SepalWidthCm'])
#%%
sns.boxplot(df['PetalLengthCm'])
#%%
df=df[~(df['PetalLengthCm']>6.5)]
#%%
sns.boxplot(df['PetalWidthCm'])
#%%
sns.heatmap(df.corr(), annot=True)
#%%
#x=df.iloc[:,1:5].values
import numpy as np
x=pd.DataFrame(np.c_[df['SepalLengthCm'],df['SepalWidthCm'],df['PetalLengthCm'],df['PetalWidthCm']])
y=df['Species']
#y=df.iloc[:,5].values
from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()
y=le.fit_transform(y)
print(y)

#%%
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=1/3)

#%%
from sklearn.naive_bayes import GaussianNB
gau=GaussianNB()

gau.fit(x_train,y_train)
y_pred=gau.predict(x_test)

#%%
from sklearn.metrics import confusion_matrix
cmat=confusion_matrix(y_test, y_pred)

cmat
from sklearn.metrics import accuracy_score
accuracy_score(y_test, y_pred)
#%%
import numpy as np
from sklearn.metrics import mean_squared_error
rmse=np.sqrt(mean_squared_error(y_test, y_pred))
rmse
