# -*- coding: utf-8 -*-
"""Created on Sun May 15 11:08:01 2022@author: sanyo ASS5
"""
#LOGISTICREGRESSION 
import pandas as pd
df=pd.read_csv("SocialNetAds.csv")
#%%
df.head()
#%%
df.describe()
#%%
df.shape
#%%
df.isnull().sum()
#%% outerliers
import seaborn as sns
import matplotlib.pyplot as plt
df.columns
sns.boxplot(df['EstimatedSalary'])
sns.boxplot(df['Purchased'])
#no outerliers
#%% corr
plt.figure(figsize=(20,10))
sns.heatmap(df.corr(),annot=True)
#age and estimation slary related to purched
#%%
import numpy as np
X=pd.DataFrame((np.c_[df['Age'],df['EstimatedSalary']]))
Y=df['Purchased']
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(X,Y,test_size=1/3)
from sklearn.linear_model import LogisticRegression
lmodel = LogisticRegression()
lmodel.fit(x_train,y_train)
predict_y=lmodel.predict(x_test)

#%%
from sklearn.metrics import confusion_matrix
cmat=confusion_matrix(y_test, predict_y)
print(cmat)
sns.heatmap(cmat,annot=True)
plt.show()
#X=df['Purchased']
#%%
TP,FP,TN,FN=cmat.ravel()
print(TP)
from sklearn.metrics import accuracy_score
accuracy_score(y_test, predict_y)
#%%
from sklearn.metrics import mean_squared_error
rmse=np.sqrt(mean_squared_error(y_train, predict_y))
rmse
